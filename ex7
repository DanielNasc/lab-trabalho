#!/bin/bash

# Programa para imprimir todas as datas em que serão ministradas aulas.

# Entrada: <data inicial> <data final> <dias da semana>
# Saída: <data> <data> <data> ...

# Exemplo:
# Entrada: 2008/02/07 2008/07/05 1,3
# Saída: 11/02/2008, 13/02/2008, 18/02/2008, 20/02/2008, ...

function check_date {
  # Checa se a data é válida
  # Entrada: <data>
  # Saída: 1 se válida, 0 se inválida
  re='^[0-9]{4}/[0-9]{2}/[0-9]{2}$'

  if ! [[ $1 =~ $re ]]; then
    echo "Data inválida! (◑_◑)"
    exit
  fi
}

function check_days {
    # Checa se os dias da semana estão no intervalo [0,6]
    # e estão separados por vírgula
    # Entrada: <dias da semana>
    # Exemplo: 1,3,5
    # Saída: 1 se válido, 0 se inválido

    re='^[0-6](,[0-6])*$'
    if ! [[ $1 =~ $re ]]; then
        echo "Dias inválidos! (◑_◑)"
        exit
    fi
}

function checar_intervalo {
    # Checa se a data inicial é menor que a data final
    # Entrada: <data inicial> <data final>
    # Saída: 1 se válida, 0 se inválida
    if [ $1 -gt $2 ]; then
        echo "Data inicial maior que data final! ( ˘︹˘ )"
        exit
    fi
}

echo -n "Digite a data inicial: "
read initial_date
check_date $initial_date

echo -n "Digite a data final: "
read final_date
check_date $final_date

echo -n "Digite o array de dias de sua preferência (ex: 1,2,4): "
read days

check_days $days

initial_date=$(date -d "$initial_date" +%s) # converte para segundos
final_date=$(date -d "$final_date" +%s) # converte para segundos

checar_intervalo $initial_date $final_date

for ((i=$initial_date; i<=$final_date; i+=86400)); do # incrementa em 1 dia (86400 segundos)
    formatted_date=$(date -d @$i +%d/%m/%Y) # converte para data
    week_days=$(date -d @$i +%w) # converte para dia da semana
    if [[ $days =~ $days_semana ]]; then # se o dia da semana está no intervalo
        echo $formatted_date
    fi
done
